name: Caching and Artifacts
on: [workflow_dispatch]
jobs:
  use-axios:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          # 1ère fois : pas de cache pour cette clef donc le crée, les fois d'après le load
          # github.com -> Actions -> Caches
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Display Cache Output
        run: echo "${{ toJSON(steps.cache-dependencies.outputs) }}"
      - name: Install dependencies
        run: npm install
      - name: Run Tests
        run: npm test
      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: code-coverage
          path: coverage
          retention-days: 10
      - name: Use Axios
        uses: actions/github-script@v6
        with:
          script: |
            const axios = require('axios');
            const res = await axios('https://icanhazdadjoke.com/',
              { headers: { Accept: 'text/plain' } }
            );
            console.log(res.data);
            # Max 10GB of cache, more and it will start removing caches (FIFO) --> main caches first
# Solutions :
#   Consider cleaning up caches more frequently (PR caches when the PR is closed for example)
# ex : https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows#managing-caches
# Caches in a Pull Request has a very limited scope : can only bs used in the PR where they were created